/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package starnet;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author junnu
 */
public class olpayments extends javax.swing.JFrame {

    /**
     * Creates new form olpayments
     */
    Connection conn=null;
    public olpayments() {
        initComponents();
        dateandtime();
        modeofpayment();
        data();
        table.getTableHeader().setFont(new Font("SansSerif", Font.BOLD, 16));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void dateandtime() {    
       DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy");  
       LocalDateTime now = LocalDateTime.now();
       date.setText(dtf.format(now));
      }
    
    public void bal_clr(int i,String s){
        JLabel[] la={sbica,sbisb,iob,paynear};
        la[i].setText(s);
        if(Double.parseDouble(s)>5000){
            la[i].setForeground(Color.BLUE);
        }else{
            la[i].setForeground(Color.RED);
        }
    }
    
    public void data(){
         try {
            conn=Database.connect();
            Statement statement = conn.createStatement();
            String sql="SELECT * FROM banks";
            ResultSet rs = statement.executeQuery(sql);
            int i=0;
            while(rs.next() && i<4){
                bal_clr(i,rs.getString(2));
                i++;
            }
            Object values[]=new Object[6];
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            sql="SELECT * FROM onlinepayments WHERE date='"+date.getText()+"' ORDER BY date DESC";
            rs = statement.executeQuery(sql);
            while(rs.next()){
                for(i=0;i<values.length;i++){
                    if(rs.getString(i+1)==null){
                        values[i]="0";
                    }
                    else{
                        values[i]=rs.getString(i+1);
                    }
                }
                model.addRow(values);
            }
            String add=null,sub=null;
            sql="SELECT SUM(amount) FROM onlinepayments WHERE date='"+date.getText()+"' AND desc<>'Deposits' "
                    + " AND  desc NOT LIKE '%Credited%' AND desc NOT LIKE '%Debited%'"
                    + " AND desc NOT LIKE '%Trans-%'";
            rs = statement.executeQuery(sql);
            while(rs.next()){
                add=rs.getString(1);
            }
            sql="SELECT SUM(profit) FROM onlinepayments WHERE date='"+date.getText()+"' AND desc<>'Deposits' "
                    + "AND  desc NOT LIKE '%Credited%' AND desc NOT LIKE '%Debited%'"
                    + " AND desc NOT LIKE '%Trans-%'";
            rs = statement.executeQuery(sql);
            while(rs.next()){
                sub=rs.getString(1);
            }
            if(add==null || add.isEmpty()){add="0";}
            if(sub==null || add.isEmpty()){sub="0";}
            profit.setText(Double.toString(Double.parseDouble(sub)-Double.parseDouble(add)));
            sql="SELECT SUM(coh) FROM onlinepayments WHERE desc<>'Deposits' AND  desc NOT LIKE '%Credited-%' "
                    + "AND desc NOT LIKE '%Debited-%'";
            rs = statement.executeQuery(sql);
            while(rs.next()){
                add=rs.getString(1);
            }
            sql="SELECT SUM(amount) FROM onlinepayments WHERE desc='Deposits' ";
            rs = statement.executeQuery(sql);
            while(rs.next()){
                sub=rs.getString(1);
            }
            if(add==null){add="0";}
            if(sub==null){sub="0";}
            coh.setText(Double.toString(Double.parseDouble(add)-Double.parseDouble(sub)));
        } catch (SQLException ex) {
            Logger.getLogger(StatementSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void modeofpayment(){
         try {
            conn=Database.connect();
            Statement statement = conn.createStatement();
            String sql="SELECT * FROM banks";
            ResultSet rs = statement.executeQuery(sql);
            while(rs.next()){
                mode.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(StatementSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public String bal(String pay,String amt){
        try {
            conn=Database.connect();
            String ba = null;
            amt=amt.equals("")?"0":amt;
            Statement statement = conn.createStatement();
            String sql="SELECT * FROM banks WHERE name ='"+pay+"'";
            ResultSet rs = statement.executeQuery(sql);
            while(rs.next()){
                ba=rs.getString(2);
            }
            ba=Double.toString(Double.parseDouble(ba)-Double.parseDouble(amt));
            sql="UPDATE banks SET balance='"+ba+"' WHERE name='"+pay+"'";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.executeUpdate();
            data();
            return ba;
        } catch (SQLException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        return null;
    }
    
    public String cre(String pay,String amt,String ch){
        try {
            conn=Database.connect();
            String ba = null;
            if(amt.equals("")){amt="0";}
            if(ch.equals("")){ch="0";}
            Statement statement = conn.createStatement();
            String sql="SELECT * FROM banks WHERE name ='"+pay+"'";
            ResultSet rs = statement.executeQuery(sql);
            while(rs.next()){
                ba=rs.getString(2);
            }
            ba=Double.toString(Double.parseDouble(ba)+Double.parseDouble(amt)+Double.parseDouble(ch));
            sql="UPDATE banks SET balance='"+ba+"' WHERE name='"+pay+"'";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.executeUpdate();
            data();
            return ba;
        } catch (SQLException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        return null;
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pay_mode = new javax.swing.ButtonGroup();
        paynear = new javax.swing.JLabel();
        iob = new javax.swing.JLabel();
        sbisb = new javax.swing.JLabel();
        sbica = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        COH = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        desc = new javax.swing.JTextField();
        amt = new javax.swing.JTextField();
        r_coh = new javax.swing.JTextField();
        mode = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        profit = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        coh = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        r_pp = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(820, 570));
        setResizable(false);

        paynear.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        iob.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        sbisb.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        sbica.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("PAYNEAR BALANCE");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("IOB BALANCE");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("SBI-SB BALANCE");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("SBI-CA BALANCE");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setText("Rs.");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel12.setText("Rs.");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel13.setText("Rs.");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel14.setText("Rs.");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Online Payments  :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("Description");

        date.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setText("Actual Amount");

        COH.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        COH.setText("COH");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel11.setText("Mode of Payment");

        desc.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        amt.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        r_coh.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        mode.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 204));
        jButton1.setText("Pay");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Description", "A.Amount", "A.Taken", "Mode", "Balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowHeight(30);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 0, 51));
        jLabel15.setText("Profit   :");

        profit.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        profit.setForeground(new java.awt.Color(0, 0, 255));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 204));
        jButton2.setText("Deposit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 204));
        jButton3.setText("Credit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton4.setText("Admin");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 0, 51));
        jLabel16.setText("Cash On Hand   :");

        coh.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        coh.setForeground(new java.awt.Color(0, 0, 255));

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 204));
        jButton5.setText("Transfer");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 204));
        jButton6.setText("Debit");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel17.setText("Phonepe");

        r_pp.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton5))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(coh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(48, 48, 48)
                                            .addComponent(profit, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 93, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(amt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                            .addComponent(desc, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(COH)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mode, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(r_pp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                                .addComponent(r_coh, javax.swing.GroupLayout.Alignment.TRAILING)))))
                                .addGap(71, 71, 71)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sbica, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sbisb, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(iob, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paynear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5))
                        .addGap(22, 22, 22)
                        .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(257, 257, 257))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sbica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(sbisb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13)
                                    .addComponent(iob, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(paynear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 11, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(profit, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(coh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(amt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(COH)
                            .addComponent(r_coh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(r_pp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton3)
                            .addComponent(jButton6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked

    }//GEN-LAST:event_tableMouseClicked
    
    public String phonepe(String amt, String ch, String pay){
        try {
            conn=Database.connect();
            String ba = null,temp=null;
            if(amt.equals("")){amt="0";}
            if(ch.equals("")){ch="0";}
            Statement statement = conn.createStatement();
            String sql="SELECT * FROM banks WHERE name = '"+pay+"'";
            ResultSet rs = statement.executeQuery(sql);
            while(rs.next()){
                ba=rs.getString(2);
            }
//            
            ba=Double.toString(Double.parseDouble(ba)-Double.parseDouble(amt));
            sql="UPDATE banks SET balance='"+ba+"' WHERE name='"+pay+"'";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.executeUpdate();
            temp=ba;
            sql="SELECT * FROM banks WHERE name = 'SBI-SB'";
            rs = statement.executeQuery(sql);
            while(rs.next()){
                ba=rs.getString(2);
            }
//            +Double.parseDouble(amt)
            ba=Double.toString(Double.parseDouble(ba)+Double.parseDouble(ch));
            sql="UPDATE banks SET balance='"+ba+"' WHERE name='SBI-SB'";
            pstmt = conn.prepareStatement(sql);
            pstmt.executeUpdate();
            data();
            return temp;
        } catch (SQLException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        return null;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        || Double.parseDouble(r_pp.getText())==0
        if(!(r_pp.getText().isEmpty()||r_pp.getText().equals("0"))){
            try{
            conn=Database.connect();
            String pay=(String) mode.getItemAt(mode.getSelectedIndex());
            String ch=r_coh.getText(),pp=r_pp.getText();
            if(r_coh.getText().isEmpty()){ch="0";}
            if(r_pp.getText().isEmpty()){pp="0";}
            String temp=Double.toString(Double.parseDouble(ch)+Double.parseDouble(pp));
            String ba=phonepe(amt.getText(),temp,pay);
            String sql="INSERT INTO onlinepayments VALUES(?,?,?,?,?,?,?,?)";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1,date.getText());
            pstmt.setString(2,"Phonepe-"+desc.getText());
            pstmt.setString(3,amt.getText());
            pstmt.setString(4,temp);
            pstmt.setString(5,pay);
            pstmt.setString(6,ba);
            pstmt.setString(7,ch);
            pstmt.setString(8,pp);
            pstmt.executeUpdate();
            this.data();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }finally{
            try {
                conn.close();
                desc.setText("");
                amt.setText("");
                r_coh.setText("");
                r_pp.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Stocks.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
        }else {
            try{
            conn=Database.connect();
            String pay=(String) mode.getItemAt(mode.getSelectedIndex());
            String ch=r_coh.getText(),pp=r_pp.getText();
            if(r_coh.getText().isEmpty()){ch="0";}
            if(r_pp.getText().isEmpty()){pp="0";}
            String temp=Double.toString(Double.parseDouble(ch)+Double.parseDouble(pp));
            String ba=bal(pay,amt.getText());
            String sql="INSERT INTO onlinepayments VALUES(?,?,?,?,?,?,?,?)";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1,date.getText());
            pstmt.setString(2,desc.getText());
            pstmt.setString(3,amt.getText());
            pstmt.setString(4,temp);
            pstmt.setString(5,pay);
            pstmt.setString(6,ba);
            pstmt.setString(7,ch);
            pstmt.setString(8,pp);
            pstmt.executeUpdate();
            this.data();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }finally{
            try {
                conn.close();
                desc.setText("");
                amt.setText("");
                r_coh.setText("");
                r_pp.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Stocks.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        credit cre=new credit();
        cre.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
            conn=Database.connect();
            String ch=r_coh.getText(),pp=r_pp.getText();
            if(r_coh.getText().isEmpty()){ch="0";}
            if(r_pp.getText().isEmpty()){pp="0";}
            String temp=Double.toString(Double.parseDouble(ch)+Double.parseDouble(pp));
            String pay=(String) mode.getItemAt(mode.getSelectedIndex());
            String ba=cre(pay,amt.getText(),r_coh.getText());
            String sql="INSERT INTO onlinepayments VALUES(?,?,?,?,?,?,?,?)";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1,date.getText());
            pstmt.setString(2,"Credited-"+desc.getText());
            pstmt.setString(3,amt.getText());
            pstmt.setString(4,temp);
            pstmt.setString(5,pay);
            pstmt.setString(6,ba);
            pstmt.setString(7,ch);
            pstmt.setString(8,pp);
            pstmt.executeUpdate();
            this.data();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }finally{
            try {
                conn.close();
                desc.setText("");
                amt.setText("");
                r_coh.setText("");
                r_pp.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Stocks.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        admin a=new admin();
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        trans cre=new trans();
        cre.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed
    
    public String deb(String pay,String amt,String ch){
        try {
            conn=Database.connect();
            String ba = null;
            if(amt.equals("")){amt="0";}
            if(ch.equals("")){ch="0";}
            Statement statement = conn.createStatement();
            String sql="SELECT * FROM banks WHERE name ='"+pay+"'";
            ResultSet rs = statement.executeQuery(sql);
            while(rs.next()){
                ba=rs.getString(2);
            }
            ba=Double.toString(Double.parseDouble(ba)-Double.parseDouble(amt)-Double.parseDouble(ch));
            sql="UPDATE banks SET balance='"+ba+"' WHERE name='"+pay+"'";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.executeUpdate();
            data();
            return ba;
        } catch (SQLException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        return null;
    }
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try{
            conn=Database.connect();
            String ch=r_coh.getText(),pp=r_pp.getText();
            if(r_coh.getText().isEmpty()){ch="0";}
            if(r_pp.getText().isEmpty()){pp="0";}
            String temp=Double.toString(Double.parseDouble(ch)+Double.parseDouble(pp));
            String pay=(String) mode.getItemAt(mode.getSelectedIndex());
            String ba=deb(pay,amt.getText(),r_coh.getText());
            String sql="INSERT INTO onlinepayments VALUES(?,?,?,?,?,?,?,?)";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1,date.getText());
            pstmt.setString(2,"Debited-"+desc.getText());
            pstmt.setString(3,amt.getText());
            pstmt.setString(4,temp);
            pstmt.setString(5,pay);
            pstmt.setString(6,ba);
            pstmt.setString(7,ch);
            pstmt.setString(8,pp);
            pstmt.executeUpdate();
            this.data();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }finally{
            try {
                conn.close();
                desc.setText("");
                amt.setText("");
                r_coh.setText("");
                r_pp.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Stocks.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(olpayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(olpayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(olpayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(olpayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new olpayments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel COH;
    private javax.swing.JTextField amt;
    private javax.swing.JLabel coh;
    private javax.swing.JLabel date;
    private javax.swing.JTextField desc;
    private javax.swing.JLabel iob;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox mode;
    private javax.swing.ButtonGroup pay_mode;
    private javax.swing.JLabel paynear;
    private javax.swing.JLabel profit;
    private javax.swing.JTextField r_coh;
    private javax.swing.JTextField r_pp;
    private javax.swing.JLabel sbica;
    private javax.swing.JLabel sbisb;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

}
